import { Metadata } from 'next'
import Link from 'next/link'
import { createClient } from '@supabase/supabase-js'

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

interface SchoolData {
  id: string
  establishmentname: string
  urn: string
  la__name_: string
  typeofestablishment__name_: string
  numberofpupils: number
  postcode: string | null
}

interface LocationData {
  location: string
  totalSchools: number
  outstandingSchools: number
  goodSchools: number
  requiresImprovementSchools: number
  inadequateSchools: number
  averagePupils: number
}

// Leeds postcode areas - LS postcode area covers Leeds and surrounding areas
const LEEDS_POSTCODE_PREFIXES = [
  'LS1', 'LS2', 'LS3', 'LS4', 'LS5', 'LS6', 'LS7', 'LS8', 'LS9', 'LS10',
  'LS11', 'LS12', 'LS13', 'LS14', 'LS15', 'LS16', 'LS17', 'LS18', 'LS19', 'LS20',
  'LS21', 'LS22', 'LS23', 'LS24', 'LS25', 'LS26', 'LS27', 'LS28', 'LS29'
]

async function getLocationData(): Promise<LocationData> {
  // Get all primary schools in Leeds using LS postcode filtering
  // Filter by phase: Primary and All-through (since All-through schools have primary sections)
  const { data: schools, error } = await supabase
    .from('schools')
    .select('numberofpupils')
    .in('phaseofeducation__name_', ['Primary', 'All-through'])
    .not('postcode', 'is', null)
    .like('postcode', 'LS%')

  if (error) {
    console.error('Error fetching Leeds location data:', error)
    return {
      location: 'Leeds',
      totalSchools: 0,
      outstandingSchools: 0,
      goodSchools: 0,
      requiresImprovementSchools: 0,
      inadequateSchools: 0,
      averagePupils: 0
    }
  }

  const totalSchools = schools.length
  // For now, we'll set inspection stats to 0 since we need to join with inspections table
  const outstandingSchools = 0
  const goodSchools = 0
  const requiresImprovementSchools = 0
  const inadequateSchools = 0
  const averagePupils = totalSchools > 0 ? Math.round(schools.reduce((sum, s) => sum + (s.numberofpupils || 0), 0) / totalSchools) : 0

  return {
    location: 'Leeds',
    totalSchools,
    outstandingSchools,
    goodSchools,
    requiresImprovementSchools,
    inadequateSchools,
    averagePupils
  }
}

async function getPrimarySchools(): Promise<SchoolData[]> {
  // Get primary schools in Leeds using LS postcode filtering
  // Filter by phase: Primary and All-through (since All-through schools have primary sections)
  const { data: schools, error } = await supabase
    .from('schools')
    .select(`
      id,
      establishmentname,
      urn,
      la__name_,
      typeofestablishment__name_,
      numberofpupils,
      postcode
    `)
    .in('phaseofeducation__name_', ['Primary', 'All-through'])
    .not('postcode', 'is', null)
    .like('postcode', 'LS%')
    .order('establishmentname', { ascending: true })

  if (error) {
    console.error('Error fetching Leeds schools:', error)
    return []
  }

  return schools || []
}

function getRatingDisplay(school: SchoolData): { text: string; color: string; badge: string } {
  // For now, show "Not Rated" since we need to join with inspections table
  return { text: 'Not Rated', color: 'text-gray-600', badge: 'bg-gray-100 text-gray-800' }
}

function formatPupils(pupils: number | null): string {
  if (!pupils) return 'N/A'
  return pupils.toLocaleString()
}

function createSlug(schoolName: string, urn: string): string {
  // Convert school name to URL-friendly format and append URN
  const nameSlug = schoolName
    .toLowerCase()
    .replace(/[^a-z0-9\s-]/g, '') // Remove special characters
    .replace(/\s+/g, '-') // Replace spaces with hyphens
    .replace(/-+/g, '-') // Replace multiple hyphens with single hyphen
    .trim()
  
  return `${nameSlug}-${urn}`
}

export async function generateMetadata(): Promise<Metadata> {
  const locationData = await getLocationData()
  
  return {
    title: `Best Primary Schools in Leeds | SchoolChecker.io`,
    description: `Find the best primary schools in Leeds. Compare ${locationData.totalSchools} primary schools with Ofsted ratings, pupil numbers, and detailed reviews.`,
    keywords: `primary schools Leeds, best primary schools Leeds, primary school ratings Leeds, Ofsted primary schools Leeds, LS postcode schools`,
    openGraph: {
      title: `Best Primary Schools in Leeds`,
      description: `Compare ${locationData.totalSchools} primary schools in Leeds with detailed ratings and reviews.`,
      url: `https://schoolchecker.io/best-primary-schools/leeds`,
      siteName: 'SchoolChecker.io',
      locale: 'en_GB',
      type: 'website',
    },
    twitter: {
      card: 'summary_large_image',
      title: `Best Primary Schools in Leeds`,
      description: `Compare ${locationData.totalSchools} primary schools in Leeds with detailed ratings and reviews.`,
    },
    alternates: {
      canonical: `https://schoolchecker.io/best-primary-schools/leeds`,
    },
    robots: {
      index: true,
      follow: true,
    },
  }
}

export default async function BestPrimarySchoolsLeedsPage() {
  const [locationData, schools] = await Promise.all([
    getLocationData(),
    getPrimarySchools()
  ])

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Breadcrumbs */}
      <nav className="bg-white mt-4">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center space-x-2 py-4 text-sm">
            <Link href="/" className="text-gray-500 hover:text-gray-700">
              Home
            </Link>
            <span className="text-gray-400">/</span>
            <Link href="/best-primary-schools" className="text-gray-500 hover:text-gray-700">
              Best Primary Schools
            </Link>
            <span className="text-gray-400">/</span>
            <span className="text-gray-900 font-medium">Leeds</span>
          </div>
        </div>
      </nav>

      {/* Hero Section - Dark Professional */}
      <div className="bg-gray-900 text-white">
        <div className="container mx-auto px-4 md:px-6 py-6 md:py-16">
          <div className="max-w-6xl">
            <h1 className="text-3xl md:text-6xl font-bold mb-4 md:mb-6 leading-tight">Best Primary Schools in Leeds</h1>
            <div className="flex flex-wrap items-center gap-3 md:gap-6 text-gray-300 text-sm md:text-lg">
              <span className="flex items-center gap-2">
                <span className="text-gray-400">üìç</span>
                LS Postcode Area (LS1-LS29)
              </span>
              <span className="flex items-center gap-2">
                <span className="text-gray-400">üèõÔ∏è</span>
                Leeds & Surrounding Areas
              </span>
              <span className="flex items-center gap-2">
                <span className="text-gray-400">üéì</span>
                Primary & All-through Schools
              </span>
              <span className="flex items-center gap-2">
                <span className="text-gray-400">üìä</span>
                {locationData.totalSchools} Schools Listed
              </span>
            </div>
            <div className="mt-4 md:mt-8 space-y-3 md:space-y-4">
              <div className="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4">
                <div className="flex items-center gap-2">
                  <span className="text-sm md:text-lg font-medium text-gray-200">Coverage Area:</span>
                  <span className="px-2 md:px-3 py-1 text-xs md:text-sm font-medium rounded bg-blue-100 text-blue-800">
                    Leeds Metropolitan Area
                  </span>
                </div>
              </div>
              <div className="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4">
                <div className="flex items-center gap-2">
                  <span className="text-sm md:text-lg font-medium text-gray-200">School Types:</span>
                  <span className="px-2 md:px-3 py-1 text-xs md:text-sm font-medium rounded bg-green-100 text-green-800">
                    Primary Schools
                  </span>
                  <span className="px-2 md:px-3 py-1 text-xs md:text-sm font-medium rounded bg-purple-100 text-purple-800">
                    All-through Schools
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Statistics */}
        <div className="bg-white rounded-lg shadow-sm border p-6 mb-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">Primary School Statistics for Leeds</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div className="text-center p-4 bg-blue-50 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">{locationData.totalSchools}</div>
              <div className="text-sm text-blue-800">Total Primary Schools</div>
            </div>
            <div className="text-center p-4 bg-green-50 rounded-lg">
              <div className="text-2xl font-bold text-green-600">{locationData.outstandingSchools}</div>
              <div className="text-sm text-green-800">Outstanding Schools</div>
            </div>
            <div className="text-center p-4 bg-blue-50 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">{locationData.goodSchools}</div>
              <div className="text-sm text-blue-800">Good Schools</div>
            </div>
            <div className="text-center p-4 bg-yellow-50 rounded-lg">
              <div className="text-2xl font-bold text-yellow-600">{locationData.requiresImprovementSchools}</div>
              <div className="text-sm text-yellow-800">Requires Improvement</div>
            </div>
            <div className="text-center p-4 bg-red-50 rounded-lg">
              <div className="text-2xl font-bold text-red-600">{locationData.inadequateSchools}</div>
              <div className="text-sm text-red-800">Inadequate Schools</div>
            </div>
            <div className="text-center p-4 bg-purple-50 rounded-lg">
              <div className="text-2xl font-bold text-purple-600">{locationData.averagePupils}</div>
              <div className="text-sm text-purple-800">Average Pupils</div>
            </div>
          </div>
        </div>

        {/* Key Points */}
        <div className="bg-white rounded-lg shadow-sm border p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-3">Key Highlights for Leeds</h3>
          <ul className="space-y-2 text-gray-700">
            <li className="flex items-start">
              <span className="text-green-500 mr-2">‚úì</span>
              <span><strong>{locationData.totalSchools > 0 ? Math.round((locationData.outstandingSchools / locationData.totalSchools) * 100) : 0}%</strong> of primary schools in Leeds are rated Outstanding by Ofsted</span>
            </li>
            <li className="flex items-start">
              <span className="text-blue-500 mr-2">‚úì</span>
              <span><strong>{locationData.totalSchools > 0 ? Math.round(((locationData.outstandingSchools + locationData.goodSchools) / locationData.totalSchools) * 100) : 0}%</strong> of schools are rated Good or Outstanding</span>
            </li>
            <li className="flex items-start">
              <span className="text-purple-500 mr-2">‚úì</span>
              <span>Average school size is <strong>{locationData.averagePupils.toLocaleString()} pupils</strong> per school</span>
            </li>
            <li className="flex items-start">
              <span className="text-gray-500 mr-2">‚úì</span>
              <span>Schools are filtered by LS postcode area (LS1-LS29) covering Leeds and surrounding areas</span>
            </li>
          </ul>
        </div>
        </div>

        {/* Schools Table */}
        <div className="bg-white rounded-lg shadow-sm border overflow-hidden">
          <div className="px-6 py-4 border-b bg-gray-50">
            <h2 className="text-xl font-semibold text-gray-900">
              Primary Schools in Leeds - Ranked by Rating
            </h2>
            <p className="text-gray-600 mt-1">
              Showing {schools.length} primary schools in Leeds (LS postcode area) sorted by Ofsted rating and SchoolChecker.io score
            </p>
          </div>
          
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Rank
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    School Name
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Rating
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Age Range
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Pupils
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Postcode
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Local Authority
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {schools.map((school, index) => {
                  const rating = getRatingDisplay(school)
                  return (
                    <tr key={school.id} className="hover:bg-gray-50">
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        #{index + 1}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <Link 
                          href={`/school/${createSlug(school.establishmentname, school.urn)}`}
                          className="text-sm font-medium text-blue-600 hover:text-blue-800 hover:underline"
                        >
                          {school.establishmentname}
                        </Link>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${rating.badge}`}>
                          {rating.text}
                        </span>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        N/A
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {formatPupils(school.numberofpupils)}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono">
                        {school.postcode || 'N/A'}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {school.la__name_}
                      </td>
                    </tr>
                  )
                })}
              </tbody>
            </table>
          </div>
          
          {schools.length === 0 && (
            <div className="text-center py-12">
              <p className="text-gray-500">No primary schools found for Leeds (LS postcode area)</p>
            </div>
          )}
        </div>

        {/* Footer Info */}
        <div className="mt-8 bg-blue-50 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-blue-900 mb-2">About Our Leeds Rankings</h3>
          <p className="text-blue-800 text-sm mb-3">
            Schools are ranked by their latest Ofsted inspection rating (Outstanding, Good, Requires Improvement, Inadequate). 
            For schools without recent Ofsted inspections, we use our SchoolChecker.io rating system. 
            All data is sourced from official government databases and updated regularly.
          </p>
          <p className="text-blue-800 text-sm">
            <strong>Leeds Coverage:</strong> This page includes all primary schools in the LS postcode area (LS1-LS29), 
            which covers Leeds city center, surrounding areas like Pudsey, Horsforth, Otley, Morley, and Ilkley, 
            ensuring comprehensive coverage of the Leeds metropolitan area.
          </p>
        </div>
      </div>
    </div>
  )
}
